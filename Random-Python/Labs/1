
#Part C
print('Hello. What is your name?')
name = input()
print('Hello,',name,'\n','Its nice to meet you.')
print('How old are you?')
age = int(input())
print('Next year you will be', age + 1, 'years old','\n','Good-bye!')
print('\n')

#Part D
KRONE_PER_EURO = 7.46
KRONE_PER_POUND = 10.33
KRONE_PER_DOLLAR = 6.66
print('Please provide this information:')
print('Business Name:')
BusinessName = input()
print('Number of euros:')
Number_of_Euros = float(input())
print('Number of pounds:')
Number_of_Pounds = float(input())
print('Number of dollars:')
Number_of_Dollars = float(input())
print('\n')
print('Copenhagen Chamber of Commerce')
print('Business name:', BusinessName)
NumE = Number_of_Euros*KRONE_PER_EURO
NumP = Number_of_Pounds*KRONE_PER_POUND
NumD = Number_of_Dollars*KRONE_PER_DOLLAR
print(Number_of_Euros, 'euros is', Number_of_Euros*KRONE_PER_EURO, 'krone')
print(Number_of_Pounds, 'pounds is', Number_of_Pounds*KRONE_PER_POUND, 'krone')
print(Number_of_Dollars, 'dollars is', Number_of_Dollars*KRONE_PER_DOLLAR, 'krone')
print('\n')
print('Total krones is', NumE+NumP+NumD)
print('\n')


#Part E
from collections import namedtuple
Book = namedtuple('Book', 'title author year price')
favorite = Book('Adventures of Sherlock Holmes',
                'Arthur Conan Doyle', 1892, 21.50)
another = Book('Memoirs of Sherlock Holmes', 
               'Arthur Conan Doyle', 1894, 23.50)
still_another = Book('Return of Sherlock Holmes',
                     'Arthur Conan Doyle', 1905, 25.00)

print('Title of the book in the variable still_another is', still_another.title)
print('The price of the book Memoirs of Shelock Holmes is', another.price)
print('The average price of all three books is', (favorite.price+another.price+still_another.price)/3)
print('It is', favorite.year < 1900, 'that the publication year of the book in variable favorite if before 1900.')

still_another = still_another._replace(price = 26.00)
print(still_another.price)
still_another = still_another._replace(price = (still_another.price*.20)+still_another.price)
print(still_another.price)
print('\n')


#Part F
from collections import namedtuple
Animal = namedtuple('Animal', 'name species age weight favfood')
elephant = Animal('Jumbo','Elephant',50,1000,'peanuts')
platypus = Animal('Perry','Platypus',7,1.7,'shrimp')
print('It is',elephant.weight < platypus.weight,'that the weight of Jumbo is less than Perrys')
print('\n')


#Part G
from collections import namedtuple
Book = namedtuple('Book', 'title author year price')
favorite = Book('Adventures of Sherlock Holmes',
                'Arthur Conan Doyle', 1892, 21.50)
another = Book('Memoirs of Sherlock Holmes', 
               'Arthur Conan Doyle', 1894, 23.50)
still_another = Book('Return of Sherlock Holmes',
                     'Arthur Conan Doyle', 1905, 25.00)

booklist = [favorite, another, still_another]

#g.1
print(booklist[0].price < booklist[1].price)
#g.2
print(booklist[0].year > booklist[-1].year)




#Part H
from collections import namedtuple     # If this line is in your file already, you don't need it again
Restaurant = namedtuple('Restaurant', 'name cuisine phone dish price')
# Restaurant attributes: name, kind of food served, phone number, best dish, price of that dish

RC = [
    Restaurant("Thai Dishes", "Thai", "334-4433", "Mee Krob", 12.50),
    Restaurant("Nobu", "Japanese", "335-4433", "Natto Temaki", 5.50),
    Restaurant("Nonna", "Italian", "355-4433", "Stracotto", 25.50),
    Restaurant("Jitlada", "Thai", "324-4433", "Paht Woon Sen", 15.50),
    Restaurant("Nola", "New Orleans", "336-4433", "Jambalaya", 5.50),
    Restaurant("Noma", "Modern Danish", "337-4433", "Birch Sap", 35.50),
    Restaurant("Addis Ababa", "Ethiopian", "337-4453", "Yesiga Tibs", 10.50)]

#h.1
print('The name of the third restaurant on the list is', RC[2].name)
#h.2
print('It is',RC[0].cuisine == RC[3].cuisine ,'that the first and fourth restaurant serve the same food')
#h.3
print('The price of the',RC[-1].dish ,'at the last restaurant on the list is', RC[-1].price)
#h.4
print('\n')
RC.sort()
print(RC)
print('\n')
#h.5
print('The best dish of the restaurant whose name is alphabetically last:', RC[-1].dish)
print('\n')
#h.6
Newlist = [RC[0],RC[1],RC[-2],RC[-1]]
print(Newlist)


#PART I
import tkinter
my_window = tkinter.Tk() #created the window
my_canvas = tkinter.Canvas(my_window, width = 500, height = 500)
#created a 500x500 size canvas
my_canvas.pack() #putting canvas into the created window earlier

#part 1

#box
my_canvas.create_line(100, 100, 100, 300, fill = 'blue') #drawing left side
my_canvas.create_line(100, 100, 300, 100, fill = 'red') #drawing top side
my_canvas.create_line(300, 100, 300, 300, fill = 'green') #drawing right side
my_canvas.create_line(100, 300, 300, 300, fill = 'orange') #drawing bottom side

#diamond
my_canvas.create_line(200, 100, 100, 200, fill = 'blue') #top left
my_canvas.create_line(200, 100, 300, 200, fill = 'red') #top right
my_canvas.create_line(100, 200, 200, 300, fill = 'green') #bottom left
my_canvas.create_line(200, 300, 300, 200, fill = 'orange') #bottom right


#house

#walls
my_canvas.create_line(200, 200, 200, 400, fill = 'blue') #drawing left side
my_canvas.create_line(200, 200, 400, 200, fill = 'red') #drawing top side
my_canvas.create_line(400, 200, 400, 400, fill = 'green') #drawing right side
my_canvas.create_line(200, 400, 400, 400, fill = 'orange') #drawing bottom side
#door
my_canvas.create_line(225, 400, 225, 300, fill = 'blue') #drawing left side
my_canvas.create_line(225, 300, 275, 300, fill = 'red') #drawing top side
my_canvas.create_line(275, 300, 275, 400, fill = 'green') #drawing right side
#window
my_canvas.create_line(300, 300, 300, 350, fill = 'blue') #drawing left side
my_canvas.create_line(300, 300, 350, 300, fill = 'red') #drawing top side
my_canvas.create_line(350, 300, 350, 350, fill = 'green') #drawing right side
my_canvas.create_line(300, 350, 350, 350, fill = 'orange') #drawing bottom side
#roof
my_canvas.create_line(200, 200, 300, 100, fill = 'blue') #drawing left side
my_canvas.create_line(400, 200, 300, 100, fill = 'green') #drawing right side

#EYE
#inner eye
my_canvas.create_oval(200, 200, 400, 300, fill = 'black')
#pupil
my_canvas.create_oval(250, 200, 350, 300, fill = 'green')
#iris
my_canvas.create_oval(275, 210, 325, 290, fill = 'red')


